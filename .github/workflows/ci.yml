on:
  workflow_call:
    inputs:
      publish: { type: boolean, default: false }
      cache: { type: boolean, default: true }

env:
  DENO_DIR: $HOME/.cache

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Debug
      # - { name: "🐞 Debug Github Context", uses: "echo '${{ toJson(github) }}'" }

      # Checkout and test
      # See https://deno.land/manual/advanced/continuous_integration for Deno CI
      # See https://docs.deno.com/runtime/reference/continuous_integration/#caching-dependencies for caching
      - { name: "🔽 Checkout code", uses: "actions/checkout@v4" }
      - { name: "⚙️ Setup Deno", uses: "denoland/setup-deno@v2" }
      - { name: "📌 Caching Dependencies", uses: "actions/cache@v4", with: { path: ${{ env.DENO_DIR }}, key: ${{ hashFiles('deno.lock') }} } }
      - { name: "🎨 Ensuring code is formatted correctly", run: "deno fmt --check" }
      - { name: "🧪 Running Tests", run: deno test --allow-all --coverage=cov/ }
      - { name: "🔀 Transforming Coverage Format", run: deno coverage --lcov cov/ > cov.lcov }

      # Upload to Codecov (see https://github.com/marketplace/actions/codecov)
      - name: "☂️ Upload Test Coverage"
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: cov.lcov
          fail_ci_if_error: true

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: inputs.publish && startsWith(github.ref, 'refs/tags/')
    permissions: { contents: read, id-token: write }
    steps:
      - { name: "🔽 Checkout code", uses: actions/checkout@v4 }
      - { name: "⚙️ Setup Deno", uses: denoland/setup-deno@v2 }
      - { name: "📦 Publish to JSR", run: deno publish --set-version ${{ github.ref_name }} }
